<div class="nav-dark-header">

	<ul class="nav-dark-brand">
		<li>
			<a href="/">DocsMan</a>
		</li>
	</ul>

	<ul class="nav-dark-header-menu">
		
		<li class="nav-dark-header-menu-list @GetMenuType(profileMenu)" @onclick="()=>OpenSubmenu(profileMenu)">
				<span class="menu-item-icon">
				<i class="@profileMenu.Icon"></i>
				</span>
			<a class="title">@profileMenu.Title</a>
				<span class="caret-icon">
				@if (profileMenu.IsOpen)
					{
						<i class="fas fa-angle-up"></i>
					}
					else
					{
						<i class="fas fa-angle-down"></i>
					}
				</span>
			<ul class="nav-dark-submenu @GetMenuType(profileMenu)">
				@foreach (var sub in profileMenu.Submenus)
				{
					<li class="nav-dark-submenu-list">
						<span class="submenu-icon">
							<i class="@sub.Icon"></i>
						</span>
						<a class="nav-link" href="@sub.HrefUrl">
							@sub.Title
						</a>
					</li>
				}
			</ul>
		</li>

		<li class="nav-dark-header-menu-list">
			<i class="fas fa-sign-out-alt">
				<a class="nav-button" href="WantLogout"></a>
			</i>
		</li>

	</ul>
</div>

@code {
	string GetMenuType(DropdownMenu menuItem) => menuItem.IsOpen ? "open" : "";
	void OpenSubmenu(DropdownMenu menuItem) => menuItem.IsOpen = !menuItem.IsOpen;

	[Parameter]
	public int UserId { get; set; }

	DropdownMenu profileMenu = new()
	{
		Title = "UserId",
		Submenus = new()
		{ 
			new()
			{ 
				Title = "Profile",
				Icon = "fas fa-user-tie",
				HrefUrl = "User/Profile"
			},
			new()
			{ 
				Title = "Docs",
				Icon = "fas fa-id-card",
				HrefUrl = "User/Docs"
			},
			new()
			{
				Title = "Группы",
				Icon = "fas fa-user-friends",
				HrefUrl = "User/Groups"
			}
		}
	};
}