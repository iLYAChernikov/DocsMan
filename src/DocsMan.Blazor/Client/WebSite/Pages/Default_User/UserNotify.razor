@page "/User/Notify"
@layout MainLayout
@using DocsMan.Blazor.Shared.DTOs

<PageTitle>UserNotify</PageTitle>

<h3 class="page-title">UserNotify</h3>

@if (loading)
{
	<SpinnerLoading />
}
else
{
	<div class="notify-page">

		@if (messages != null)
		{
			@foreach (var item in messages)
			{
				<div class="msg">

					@if (item.IsRead)
					{
						<div class="point" @onclick="()=>ForgetNotify(item.Notify.Id)">
							<i class="fa-regular fa-circle"></i>
						</div>
					}
					else
					{
						<div class="point" @onclick="()=>ReadNotify(item.Notify.Id)">
							<i class="fa-solid fa-circle"></i>
						</div>
					}

					<h3>@item.Notify.Title</h3>
					<p>@item.Notify.Description</p>
					<p>@item.Notify.DateTime.ToShortDateString() @item.Notify.DateTime.ToLongTimeString()</p>
				</div>
			}
		}

	</div>
}

<ResponseResultPage RequestResult="@resp" IsWasSendRequest="@isClick" OpenCloseStyles="@CSS_Styles.OpenCloseStyles" />

@code {
	bool loading = false;
	RequestResultDto? resp;
	bool isClick = false;

	protected override async Task OnInitializedAsync()
	{
		loading = true;

		await LoadNotify();

		await Task.Delay(500);
		loading = false;
		StateHasChanged();
	}

	List<(NotificationDto Notify, bool IsRead)> messages = new()
	{
		(new()
			{
				Title = "About file",
				Description = "More words",
				DateTime = new DateTime(2024,02,20,18,52,08)
			}, true),
		(new()
			{
				Title = "Was deleted and kirdik",
				Description = "Velit pariatur nostrud deserunt et officia mollit velit duis fugiat magna aliqua nostrud.",
				DateTime = DateTime.Now
			}, false)
	};

	async Task LoadNotify()
	{
		var req = await new ServerGet<IEnumerable<(NotificationDto Notify, bool IsRead)>>(WebCooker)
		.DoRequest_GET("Profile/GetNotify");
		messages = req.Value.ToList();

		StateHasChanged();
	}

	async Task ReadNotify(int id)
	{
		await new ServerDelete(WebCooker)
			.DoRequest_DELETE($"Notify/Read/{id}");

		await LoadNotify();
	}

	async Task ForgetNotify(int id)
	{
		await new ServerDelete(WebCooker)
			.DoRequest_DELETE($"Notify/Forget/{id}");

		await LoadNotify();
	}
}